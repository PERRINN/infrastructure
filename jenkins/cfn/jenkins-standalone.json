{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Jenkins Full Stack",
  "Parameters": {
    "AccessCidr": {
      "Type": "String",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x.",
      "Description": "IP Range or Address allowed access to the instance",
      "MaxLength": "18",
      "MinLength": "9"
    },
    "AccessSecurityGroup": {
      "Type": "String",
      "Description": "Security Group ID for existing Access Control Group"
    },
    "AccessSubnet": {
      "Type": "String",
      "AllowedPattern": "subnet-[a-z0-9]{8}",
      "ConstraintDescription": "Must be a valid subnet ID",
      "Description": "Subnet for the Access (Public) interface",
      "MaxLength": "15",
      "MinLength": "15",
      "Default": "subnet-e96a25c1"
    },
    "AdminCidr": {
      "Type": "String",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x.",
      "Description": "IP Range or Address allowed administrative access to the instance",
      "MaxLength": "18",
      "MinLength": "9",
      "Default": "1.129.96.248/32"
    },
    "AdminSecurityGroup": {
      "Type": "String",
      "Description": "Security Group ID for existing Access Control Group"
    },
    "AdminSubnet": {
      "Type": "String",
      "AllowedPattern": "subnet-[a-z0-9]{8}",
      "ConstraintDescription": "Must be a valid subnet ID",
      "Description": "Subnet for the Admin interface",
      "MaxLength": "15",
      "MinLength": "15",
      "Default": "subnet-e96a25c1"
    },
    "AZ": {
      "Type": "String",
      "Description": "Availability Zone to place instance in"
    },
    "CfnBucket": {
      "Type": "String",
      "Default": "perrinn-cfn"
    },
    "ServerAmi": {
      "Type": "String",
      "AllowedPattern": "ami-[a-z0-9]{8}",
      "MaxLength": "12",
      "MinLength": "12",
      "Default": "ami-fb91b9ec"
    },
    "InstanceType": {
      "Type": "String",
      "Description": "Instance Size for this machine",
      "Default": "t2.micro"
    },
    "KeyName": {
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription": "Must be a valid, existing Key Pair"
    },
    "NewRelicKey": {
      "Type": "String",
      "Default": "1234"
    },
    "Product": {
      "Type": "String",
      "Default": "jenkins"
    },
    "VpcId": {
      "Type": "String",
      "AllowedPattern": "vpc-[a-z0-9]{8}",
      "ConstraintDescription": "Must be a valid, existing VPC",
      "MaxLength": "12",
      "MinLength": "12",
      "Default": "vpc-e47c9481"
    },
    "ZoneName": {
      "Type": "String",
      "MinLength": "4",
      "Default": "perrinnapp.net"
    }
  },
  "Conditions": {
    "AccessSecCond": {
      "Fn::Equals": [
        {
          "Ref": "AccessSecurityGroup"
        },
        ""
      ]
    },
    "AdminSecCond": {
      "Fn::Equals": [
        {
          "Ref": "AdminSecurityGroup"
        },
        ""
      ]
    }
  },
  "Resources": {
    "AdminSecurity": {
      "Condition": "AdminSecCond",
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Access to management port on Jenkins Host",
        "VpcId": {
          "Ref": "VpcId"
        },
        "SecurityGroupIngress": [
          {
            "CidrIp": {
              "Ref": "AdminCidr"
            },
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22"
          }
        ]
      }
    },
    "AccessSecurity": {
      "Condition": "AccessSecCond",
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Access to inbount port(s) on Jenkins Host",
        "VpcId": {
          "Ref": "VpcId"
        },
        "SecurityGroupIngress": [
          {
            "CidrIp": {
              "Ref": "AccessCidr"
            },
            "IpProtocol": "tcp",
            "FromPort": "8080",
            "ToPort": "8080"
          },
          {
            "CidrIp": {
              "Ref": "AccessCidr"
            },
            "IpProtocol": "tcp",
            "FromPort": "443",
            "ToPort": "443"
          }
        ]
      }
    },
    "InstanceRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "ec2.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/"
      }
    },
    "RolePolicies": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "S3Download",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:ListBucket",
                "s3:GetBucketLocation",
                "s3:GetObject",
                "s3:PutObject"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      {
                        "Ref": "CfnBucket"
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "ec2:AttachNetworkInterface",
                "ec2:DescribeInstances",
                "ec2:DescribeInstanceStatus",
                "ec2:DescribeNetworkInterfaces",
                "ec2:DetachNetworkInterface",
                "ec2:DescribeNetworkInterfaceAttribute"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ]
        },
        "Roles": [
          {
            "Ref": "InstanceRole"
          }
        ]
      }
    },
    "BucketProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [
          {
            "Ref": "InstanceRole"
          }
        ]
      }
    },
    "JenkinsLaunchConfig": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "AssociatePublicIpAddress": true,
        "IamInstanceProfile": {
          "Ref": "BucketProfile"
        },
        "ImageId": {
          "Ref": "ServerAmi"
        },
        "InstanceType": {
          "Ref": "InstanceType"
        },
        "KeyName": {
          "Ref": "KeyName"
        },
        "SecurityGroups": [
          {
            "Fn::If": [
              "AdminSecCond",
              {
                "Ref": "AdminSecurity"
              },
              {
                "Ref": "AdminSecurityGroup"
              }
            ]
          },
          {
            "Fn::If": [
              "AccessSecCond",
              {
                "Ref": "AccessSecurity"
              },
              {
                "Ref": "AccessSecurityGroup"
              }
            ]
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash -v\n",
                "#\n",
                "chown -R tomcat:tomcat /usr/share/tomcat8\n",
                "yum update -y aws-cfn-bootstrap\n",
                "# Install the files and packages from the metadata\n",
                "/opt/aws/bin/cfn-init -v --stack ",
                {
                  "Ref": "AWS::StackName"
                },
                " --resource JenkinsLaunchConfig --configsets InstallAndRun --region ",
                {
                  "Ref": "AWS::Region"
                },
                "\n"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "AWS::CloudFormation::Authentication": {
          "S3AccessCreds": {
            "type": "S3",
            "roleName": {
              "Ref": "InstanceRole"
            }
          }
        },
        "AWS::CloudFormation::Init": {
          "configSets": {
            "InstallAndRun": [
              "Install",
              "Configure"
            ]
          },
          "Install": {
            "packages": {
              "yum": {
              }
            },
            "files": {
              "/etc/cfn/cfn-hup.conf": {
                "content": {
                  "Fn::Join": [
                    "",
                    [
                      "[main]\n",
                      "stack = ",
                      {
                        "Ref": "AWS::StackId"
                      },
                      "\n",
                      "region = ",
                      {
                        "Ref": "AWS::Region"
                      },
                      "\n"
                    ]
                  ]
                },
                "mode": "0644",
                "owner": "root",
                "group": "root"
              },
              "/etc/cfn/cfn-auto-reloader.conf": {
                "content": {
                  "Fn::Join": [
                    "",
                    [
                      "[cfn-auto-reloader-hook]\n",
                      "triggers=post.update\n",
                      "path=Resources.JenkinsLaunchConfig.Metadata.AWS::CloudFormation::Init\n",
                      "action=/opt/aws/bin/cfn-init -v --stack ",
                      {
                        "Ref": "AWS::StackName"
                      },
                      " --resource JenkinsLaunchConfig --configsets InstallAndRun --region ",
                      {
                        "Ref": "AWS::Region"
                      },
                      "\n",
                      "runas=root\n",
                      "\n"
                    ]
                  ]
                },
                "mode": "0644",
                "owner": "root",
                "group": "root"
              }
            },
            "services": {
              "sysvinit": {
                "enabled": true,
                "ensurerunning": true
              },
              "cfn-hup": {
                "enabled": true,
                "ensurerunning": true,
                "files": [
                  "/etc/cfn/cfn-hup.conf",
                  "/etc/cfn/hooks.d/cfn-auto-reloader.conf"
                ]
              },
              "tomcat8": {
                "enabled": true,
                "ensurerunning": true,
                "files": [
                  "/etc/tomcat8/tomcat8.conf"
                ]
              },
              "newrelic-sysmond": {
                "enabled": true,
                "ensurerunning": true,
                "files": [
                  "/etc/newrelic/nrsysmond.cfg"
                ]
              }
            }
          },
          "Configure": {
            "commands": {
              "10_conf_newrelic": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "nrsysmond-config --set license_key=",
                      {
                        "Ref": "NewRelicKey"
                      }
                    ]
                  ]
                }
              },
              "20_start_newrelic": {
                "command": "/etc/init.d/newrelic-sysmond start"
              },
              "30_nr_agent_config": {
                "command": "cd /tmp ; unzip /tmp/newrelic-java.zip ; mv newrelic /usr/share/tomcat8"
              },
              "31_nr_agent_config": {
                "command": "echo \"\\\"echo JAVA_OPTS=-javaagent:/usr/share/tomcat8/newrelic/newrelic.jar\\\"\""
              },
              "90_download_tomcat": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "aws s3 cp s3://",
                      {
                        "Ref": "CfnBucket"
                      },
                      "/",
                      {
                        "Ref": "Product"
                      },
                      "/jenkins-backup.tar.gz /tmp/jenkins-backup.tar.gz"
                    ]
                  ]
                }
              },
              "91_restore_tomcat": {
                "command": "tar -xf /tmp/jenkins-backup.tar.gz -C /usr/share/tomcat8"
              },
              "92_tomcat_access": {
                "command": "chown -R tomcat:tomcat /usr/share/tomcat8/.jenkins"
              },
              "99_start_tomcat": {
                "command": "service tomcat8 restart"
              }
            }
          }
        }
      }
    },
    "JenkinsAutoScalingGroup": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "AvailabilityZones": [
          {
            "Ref": "AZ"
          }
        ],
        "Cooldown": "600",
        "DesiredCapacity": "1",
        "LaunchConfigurationName": {
          "Ref": "JenkinsLaunchConfig"
        },
        "MaxSize": "1",
        "MinSize": "1",
        "TerminationPolicies": [
          "OldestInstance",
          "ClosestToNextInstanceHour"
        ],
        "VPCZoneIdentifier": [
          {
            "Ref": "AccessSubnet"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "Production Jenkins Instance",
            "PropagateAtLaunch": true
          }
        ]
      }
    },
    "JenkinsStart": {
      "Type": "AWS::AutoScaling::ScheduledAction",
      "Properties": {
        "AutoScalingGroupName": {
          "Ref": "JenkinsAutoScalingGroup"
        },
        "DesiredCapacity": "1",
        "MaxSize": "1",
        "MinSize": "1",
        "Recurrence": "45 09 * * *"
      }
    },
    "JenkinsEnd": {
      "Type": "AWS::AutoScaling::ScheduledAction",
      "Properties": {
        "AutoScalingGroupName": {
          "Ref": "JenkinsAutoScalingGroup"
        },
        "DesiredCapacity": "1",
        "MaxSize": "1",
        "MinSize": "1",
        "Recurrence": "12 00 * * *"
      }
    }
  }
}
